@using Identity.Data.Entities
@using Microsoft.AspNetCore.Hosting
@using Microsoft.AspNetCore.Mvc.ViewEngines
@inject IWebHostEnvironment Environment
@inject ICompositeViewEngine Engine

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<!DOCTYPE html>
<html>
    
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/Identity/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Identity/css/site.css" />


    <link rel="stylesheet" href="/Styles/styles.css">
    @*<script src="/JavaScript/script.js"></script>*@

    <!-- Scrollbar Custom CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css">

    <!-- Font Awesome JS -->
    <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/solid.js" integrity="sha384-tzzSw1/Vo+0N5UhStP3bvwWPq+uvzCMfrN1fEFe+xBmv1C/AtVX5K0uZtmcHitFZ" crossorigin="anonymous"></script>
    <script defer src="https://use.fontawesome.com/releases/v5.0.13/js/fontawesome.js" integrity="sha384-6OIrr52G08NpOFSZdxxz1xdNSndlD4vdcf/q2myIUVO0VsqaGHJsB0RaBE01VTOY" crossorigin="anonymous"></script>

    <!-- Bootstrap CSS CDN -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous">

    <script src="https://kit.fontawesome.com/c3901b143b.js" crossorigin="anonymous"></script>


          <script
      src="https://code.jquery.com/jquery-3.6.0.min.js"
      integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
      crossorigin="anonymous"
    ></script>



</head>
<body>
 

      <div class="wrapper">
        <nav id="sidebar">
            <div class="sidebar-header">
                    <h3>Classroom <i class="far fa-laugh-wink fa-rotate-by" style="--fa-rotate-angle: -15deg;"></i>
                        @*</a>*@
                </h3>
            </div>

            <ul class="list-unstyled components">

                @if (ViewContext.HttpContext.User.IsInRole("Secretary") || ViewContext.HttpContext.User.IsInRole("Student") || ViewContext.HttpContext.User.IsInRole("Teacher"))
                {
                       <li>
                          <a href="@Url.Action("Index", "Default")">Home</a>
                        </li>
                }
                         @if (ViewContext.HttpContext.User.IsInRole("Secretary"))
                {
                    <li>
                        <a href="@Url.Action("Index", "Secretaries")">Secretaries</a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Teachers")">Teachers</a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Students")">Students</a>
                    </li>
                }
                @if (ViewContext.HttpContext.User.IsInRole("Secretary") || ViewContext.HttpContext.User.IsInRole("Student") || ViewContext.HttpContext.User.IsInRole("Teacher"))
                {
                     <li>
                        <a href="@Url.Action("Index", "Courses")">Courses</a>
                    </li>
                }
                @if(ViewContext.HttpContext.User.IsInRole("Secretary") || ViewContext.HttpContext.User.IsInRole("Teacher"))
                {
                    <li>
                        <a href="@Url.Action("Index", "Laboratories")">Laboratories</a>
                    </li>
                }
                 @if(ViewContext.HttpContext.User.IsInRole("Student"))
                {
                    <li>
                        <a href="@Url.Action("StudentIndex", "Laboratories")">Laboratories</a>
                    </li>
                }

                @if (ViewContext.HttpContext.User.IsInRole("Secretary")) {
                    <li>
                        <a href="@Url.Action("Index", "Groups")">Groups</a>
                    </li>
                    <li>
                        <a href="@Url.Action("Index", "Subgroups")">Subgroups</a>
                    </li>
                }

                @if (ViewContext.HttpContext.User.IsInRole("Teacher"))
                    {
                    <li>
                        <a href="@Url.Action("Index", "Assignments")">Assignments</a>
                    </li>
                }
                
                @if(ViewContext.HttpContext.User.IsInRole("Student"))
                    {
                    <li>
                        <a href="@Url.Action("StudentIndex", "Assignments")">Assignments</a>
                    </li>
                }
                @if(ViewContext.HttpContext.User.IsInRole("Teacher"))
                {
                  <li>
                        <a href="@Url.Action("Index", "Submissions")">Submissions</a>
                    </li>
                }
            </ul>




        </nav>
        <div id="content">


            <nav class="navbar navbar-expand-sm navbar-light navbar-toggleable-sm bg-white border-bottom box-shadow mb-3">

@if(ViewContext.HttpContext.User.IsInRole("Secretary")) { 

                        <a href="#menu" id="toggle" style="position: relative; left: 18px;"><span></span></a>

                <div id="menu" style="top: 115px; left:-4px;">
                  <ul id="menu_ul">

          
                           <li id="menu_li"><a asp-controller="Groups" asp-action="Create" id="menu_a">Create Group</a></li>
                           <li id="menu_li"><a asp-controller="Subgroups" asp-action="Create" id="menu_a">Create Subgroup</a></li>
                           <li id="menu_li"><a asp-controller="Courses" asp-action="Create" id="menu_a">Create Course</a> </li>
                           <li id="menu_li"> <a asp-controller="Secretaries" asp-action="Create" id="menu_a">Create Secretary Account</a>   </li>
                           <li id="menu_li"> <a asp-controller="Teachers" asp-action="Create" id="menu_a">Create Teacher Account</a>   </li>
                           <li id="menu_li"><a asp-controller="Students" asp-action="Create" id="menu_a">Create Student Account</a>       </li>
                  </ul>
                </div>

}
            <div class="container">




              
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    @{
                        var result = Engine.FindView(ViewContext, "_LoginPartial", isMainPage: false);
                    }
                    @if (result.Success)
                    {
                        await Html.RenderPartialAsync("_LoginPartial");
                    }
                    else
                    {
                        throw new InvalidOperationException("The default Identity UI layout requires a partial view '_LoginPartial' " +
                            "usually located at '/Pages/_LoginPartial' or at '/Views/Shared/_LoginPartial' to work. Based on your configuration " +
                            $"we have looked at it in the following locations: {System.Environment.NewLine}{string.Join(System.Environment.NewLine, result.SearchedLocations)}.");
                    }
                </div>
            </div>
        </nav>
        
                    @RenderBody()
       
        </div>
    </div>


    <script src="~/Identity/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/Identity/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Identity/js/site.js" asp-append-version="true"></script>
    @RenderSection("Scripts", required: false)

</body>
</html>



<script>
    $(document).ready(function(){
        console.log("this");
 
    var theToggle = document.getElementById('toggle');

// based on Todd Motto functions
// https://toddmotto.com/labs/reusable-js/

// hasClass
function hasClass(elem, className) {
	return new RegExp(' ' + className + ' ').test(' ' + elem.className + ' ');
}
// addClass
function addClass(elem, className) {
    if (!hasClass(elem, className)) {
    	elem.className += ' ' + className;
    }
}
// removeClass
function removeClass(elem, className) {
	var newClass = ' ' + elem.className.replace( /[\t\r\n]/g, ' ') + ' ';
	if (hasClass(elem, className)) {
        while (newClass.indexOf(' ' + className + ' ') >= 0 ) {
            newClass = newClass.replace(' ' + className + ' ', ' ');
        }
        elem.className = newClass.replace(/^\s+|\s+$/g, '');
    }
}
// toggleClass
function toggleClass(elem, className) {
	var newClass = ' ' + elem.className.replace( /[\t\r\n]/g, " " ) + ' ';
    if (hasClass(elem, className)) {
        while (newClass.indexOf(" " + className + " ") >= 0 ) {
            newClass = newClass.replace( " " + className + " " , " " );
        }
        elem.className = newClass.replace(/^\s+|\s+$/g, '');
    } else {
        elem.className += ' ' + className;
    }
}

theToggle.onclick = function() {
   toggleClass(this, 'on');
   return false;
}
   });

</script>

